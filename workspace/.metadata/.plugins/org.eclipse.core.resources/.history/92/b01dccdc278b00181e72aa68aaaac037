package com.yosakura.test;

import java.lang.annotation.Annotation;
import java.lang.reflect.Method;
import java.lang.reflect.Modifier;

public class MethodTest {
	public static void main(String[] args) throws Exception {
		// 1.获取字节码对象
		Class<?> clazz = Class.forName("com.yosakura.entity.User");
		// 2.获取指定的方法
		Method method = clazz.getMethod("toString");
		// 获取方法的访问修饰符
		String modifier = Modifier.toString(method.getModifiers());
		// 获取返回值类型
		String returnType = method.getReturnType().getName();
		// 方法名
		String name = method.getName();
		Annotation[] annotations = method.getAnnotations();
		for (Annotation annotation : annotations) {
			System.out.println(annotation.getClass());
		}
		// 形参类型的数组
		Class<?>[] parameterTypes = method.getParameterTypes();
		System.out.println(modifier+" "+returnType+" "+name+"(){}");
	}
	// 获取类中所有的方法名
	public static void getAllmethod() throws ClassNotFoundException {
		// 1.获取字节码对象
		Class<?> clazz = Class.forName("com.yosakura.entity.User");
		// 2.获取方法
		Method[] methods = clazz.getDeclaredMethods();
		for (Method method : methods) {
			method.setAccessible(true);
			System.out.println(method.getName());
		}
	}
}
