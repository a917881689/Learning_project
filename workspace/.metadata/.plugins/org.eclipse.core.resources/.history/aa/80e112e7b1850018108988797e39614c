package com.yosakura.web.servlet;

import java.io.IOException;
import java.util.LinkedHashSet;
import java.util.TreeSet;

import javax.servlet.ServletException;
import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

public class ShopServlet extends HttpServlet{
	public static void main(String[] args) {
		System.out.println(new ShopServlet().distict(new String[]{"1","2","3"},new String[]{"2","4","5"}));
		
	}
	private static final long serialVersionUID = 1L;
	@Override
	protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		// 1.获取请求中的商品id
		String[] pids = req.getParameterValues("product");
		// 2.从Cookie中获取以前购物车中的pid
		Cookie[] cookies = req.getCookies();
		// 获取指定cookie的value
		String old_pid = getCookieValue(cookies,"pid");
		String[] old_pids = old_pid.split("-");
		String new_pid = null;
		if (old_pids != null) {
			
		}else {
			// 购物车以前没有数据时
			getString(pids);
		}
		// 将拼接好的pid放到Cookie中发送到浏览器保存
		Cookie cookie = new Cookie("pid", newPid);
		resp.addCookie(cookie);
		resp.getWriter().write("<script type='text/javascript'>alert('hahaha')</script>");
		resp.setHeader("refresh", "1;url:index.html");
	}
	// 两个数组去重
	public String[] distict (String[] old,String[] news) {
		LinkedHashSet<String> set = new LinkedHashSet<>();
		// TreeSet<String> set = new TreeSet<>();
		for (String str : old) {
			set.add(str);
		}
		for (String str : news) {
			set.add(str);
		}
		String[] strs = new String[set.size()];
		int i = 0;
		for (String str : set) {
			strs[i] = str; 
			i++;
		}
		return strs;
	}
	// 拼接字符串
	public String getString(String[] pids) {
		if (pids == null) {
			return null;
		}
		StringBuilder sb = new StringBuilder();
		if (pids != null) {
			for (String pid : pids) {
				sb.append(pid).append("-");
			}
		}
		return sb.substring(0,sb.length()-1);
	}
	public String getCookieValue(Cookie[] cookies, String old_pid) {
		if (cookies == null || old_pid == null) {
			return null;
		}
		String pid = null;
		for (Cookie cookie : cookies) {
			if (old_pid.equals(cookie)) {
				pid = cookie.getValue();
			}
		}
		
		return pid;
	}
	@Override
	protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		this.doGet(req, resp);
	}
}
