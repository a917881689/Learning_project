package com.yosakura.service.impl;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import com.yosakura.dao.impl.ProductDaoImpl;
import com.yosakura.entity.PageListModel;
import com.yosakura.entity.PageModel;
import com.yosakura.entity.Product;
import com.yosakura.entity.ProductCategory;
import com.yosakura.service.ProductService;

public class ProductServiceImpl implements ProductService{
	/**
	 * 分页查询商品
	 */
	@Override
	public PageModel<Product> pageProduct(int currentPage, int pageSize) {
		PageModel<Product> pageModel = null;
		try {
			ProductDaoImpl pdi = new ProductDaoImpl();
			// 1.获取商品的总个数
			long total = pdi.ProductCount();
			// 2.计算总页数
			int totalPage = (int)(total%pageSize == 0?total/pageSize:total/pageSize+1);
			// 3.获取当前页所有商品的集合
			List<Product> list = pdi.onePageProductList(currentPage, pageSize);
			// 4.将以上分页参数封装到PageModel对象中
			pageModel = new PageModel<>(currentPage, pageSize, total, totalPage, list);
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return pageModel;
	}
	/**
	 * 查询商品所有分类
	 */
	@Override
	public List<PageListModel<ProductCategory>> queryProductClassify() {

		ProductDaoImpl pdi = new ProductDaoImpl();
		List<PageListModel<ProductCategory>> listProModelA = new ArrayList<>();
		try {
			//获取一级分类
			List<ProductCategory> ClassA = pdi.queryProClassify();
		
			for (ProductCategory proClass : ClassA) {
				List<PageListModel<ProductCategory>> listProModelB = new ArrayList<>();
				
				//获取二级分类
				List<ProductCategory> ClassB = pdi.queryProClassify(proClass.getId());
				for (ProductCategory pro_classTwo : ClassB) {

					// 获取三级分类
					List<ProductCategory> ClassC = pdi.queryProClassify(proclassTwo.getId());
					List<PageListModel<ProductCategory>> listProModelC = new ArrayList<>();	
					// 封装三级分类
					for (ProductCategory proCategory : ClassC) {
						PageListModel<ProductCategory> pro =  new PageListModel<>();
						pro.setProduct(proCategory);
						listProModelC.add(pro);
					}
					PageListModel<ProductCategory> pro =  new PageListModel<>();
					listProModelB.add(new PageListModel<ProductCategory>(pro_classTwo,listProModelC));
				}
				listProModelA.add(new PageListModel<ProductCategory>(proClass,listProModelB));
			}			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		 // List<PageListModel<ProductCategory>>
		return null;
	}
	/**
	 * 根据ID数组查询商品
	 */
	@Override
	public List<Product> queryProductsByidArray(Object[] termsArray) {
		List<Product>  list = null;
		try {
			ProductDaoImpl pdi = new ProductDaoImpl();
			list = pdi.queryProductsByidArray(termsArray);
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return list;
	}
	/**
	 * 根据条件分页查询商品分类
	 */
	@Override
	public PageModel<Product> queryProduct(String info,int currentPage, int pageSize) {
		PageModel<Product> pageModel = null;
		try {
			ProductDaoImpl pdi = new ProductDaoImpl();
			// 1.获取条件查询商品的总个数
			long total = pdi.ProductCount("%"+info+"%");
			// 2.计算总页数
			int totalPage = (int)(total%pageSize == 0?total/pageSize:total/pageSize+1);
			// 3.获取当前页所有商品的集合
			List<Product> list = pdi.onePageProductList("%"+info+"%",currentPage, pageSize);
			// 4.将以上分页参数封装到PageModel对象中
			pageModel = new PageModel<>(currentPage, pageSize, total, totalPage, list);
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return pageModel;
	}
	
	@Override
	public Product queryProductById(Object terms) {
		Product  pro = null;
		try {
			ProductDaoImpl pdi = new ProductDaoImpl();
			pro = pdi.queryProductById(terms);
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return pro;
	}
	
}
