package com.yosakura.web.servlet;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.alibaba.fastjson.JSON;
import com.yosakura.entity.Shop;
import com.yosakura.entity.User;
import com.yosakura.service.impl.ShopServiceImpl;
import com.yosakura.util.CookieUtil;

@WebServlet("/addShop")
public class AddshopServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;

	public void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		Long pid = Long.parseLong(req.getParameter("pid"));
		Integer pnum = Integer.parseInt(req.getParameter("pnum"));
		User user = (User)req.getSession().getAttribute("loginUser");
		if (pid == null || "".equals(pid) || pnum == null || "".equals(pnum)) {
			resp.getWriter().write("error");
		}
		if (user != null) {
			// 用户登录
			long uid = user.getId();
			// 创建购物车记录
			int result = new ShopServiceImpl().addShopCart(new Shop(pid,pnum,uid));
			resp.getWriter().write(result>0?"suc":"fail");
		}else {
			// 用户未登录
			// 获取cookie中的购物车数据
			String cookieShopCartjson = CookieUtil.getCookieValue(req.getCookies(),"shopCart");
			String shopCartjson = null;
			// 判断cookie中是否有数据
			if (cookieShopCartjson == null || "".equals(cookieShopCartjson)) {
				// 没有数据直接创建一个购物车集合，添加到cookie中
				List<Shop> shopCartList = new ArrayList<>();
				shopCartList.add(new Shop(pid,pnum));
				shopCartjson = JSON.toJSONString(shopCartList);
			}else{
				// 有数据获取json，转换成购物车集合，
				List<Shop> shopCartList = JSON.parseArray(cookieShopCartjson,Shop.class);
				// 判断是否有重复数据
				for (Shop shop : shopCartList) {
					if(shop.getPid().equals(pid)) {
						// 有重复数据
						shopCartList.add(new Shop(pid,pnum));
					}
				}
				// 增加数据，添加到cookie中
				
				shopCartjson = JSON.toJSONString(shopCartList);
			}
			System.out.println("cookie购物车"+shopCartjson);
			Cookie cookie = new Cookie("shopCart",shopCartjson);
			cookie.setMaxAge(60*60*24*30);//过期时间为30天
			resp.addCookie(cookie);
			resp.getWriter().write("suc");
		}
	}

	public void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		doGet(req, resp);
	}
}